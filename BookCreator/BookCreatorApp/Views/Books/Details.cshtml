@model BookDetailsOutputModel
@inject IBookService BookService
@inject UserManager<BookCreatorUser> UserManager
@{
    ViewData["Title"] = "Details";

    var isAuthor = this.User.Identity.Name == Model.Author;
    var user = await this.UserManager.FindByNameAsync(this.User.Identity.Name);
    bool hasAlreadyRated = this.BookService.AlreadyRated(Model.Id, this.User.Identity.Name);
    bool isFollowed = this.BookService.IsFollowing(user.Id, Model.Id);
    var followingCount = this.BookService.FollowingCount(Model.Id);

}
<div class="row col-md-12">

    <div class="col-md-4">
        <div class="card w-100">
            <img class="card-img-top" src="@Model.ImageUrl" alt="Card image cap" style="height:auto">
            <div class="card-body ">
                <h5 class="card-title">Title:  @Model.Title</h5>
                <hr />
                <p class=" card-text">@Model.Summary</p>
            </div>
            <ul class="list-group list-group-flush">
                @if (Model.Author == null)
                {
                    <li><a class="list-group-item">Author: @GlobalConstants.UnknownUser</a></li>

                }
                else
                {
                    <li><a class="list-group-item card-link" asp-action="Profile" asp-controller="Users" asp-area="" asp-route-username="@Model.Author">Author: @Model.Author</a></li>

                }
                <li class="list-group-item">Created on: @Model.CreatedOn</li>
                <li class="list-group-item">Last edit on: @Model.LastEditedOn</li>
                <li class="list-group-item">Rating: @Model.Rating</li>


                @if (isAuthor)
                {
                    <div class="card-body btn-group-justified">
                        <div class="container d-flex justify-content-between">
                            <a asp-area="" asp-action="DeleteBook" asp-controller="Books" asp-route-id="@Model.Id" class="btn btn-primary"><i class="fas fa-trash">Delete</i> </a>
                            <a asp-area="" asp-action="AddChapter" asp-controller="Chapters" asp-route-id="@Model.Id" class="btn btn-primary"><i class="fas fa-plus">Add Chapter</i></a>
                        </div>
                    </div>
                }


                @if (!isAuthor && !hasAlreadyRated)
                {
                    <hr />
                    <div class="card-body btn-group-justified">
                        <form asp-action="AddRating" asp-controller="Books" method="post">
                            <div class="form-group">
                                <select name="Rating" class="col-md-12">
                                    <option selected class="text-center" disabled="disabled">Rate The Book!</option>
                                    @for (var r = 1; r <= 10; r++)
                                    {
                                        <option class="text-center">@r</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <input type="text" value="@Model.Id" name="bookId" hidden="hidden" />
                            </div>
                            <div>
                                <button type="submit" class="btn btn-primary">Add Rating</button>
                            </div>
                        </form>
                    </div>
                }
                <li class="list-group-item"><b>@followingCount</b> Followers</li>
                @if (isFollowed && !isAuthor)
                {
                    <a asp-area="" asp-action="UnFollow" asp-controller="Books" asp-route-id="@Model.Id" class="btn btn-primary">Unfollow</a>

                }
                @if (!isFollowed && !isAuthor)
                {
                    <a asp-action="Follow" asp-controller="Books" asp-area="" asp-route-id="@Model.Id" class="btn btn-primary">Follow</a>

                }
            </ul>
        </div>
    </div>
    <div class="col-md-6 border border-dark w-100 mb-1" style="max-height:800px;overflow-y:auto">

        @await Component.InvokeAsync("ChapterList", new { bookId = @Model.Id })
    </div>
    <div class="col-md-2">
        @await Component.InvokeAsync("CommentsList", new { bookId = @Model.Id })

        <div class="card w-100 mt-1 d-flex">
            <h5 class="card-header">Leave a Comment:</h5>
            <div class="card-body container-flex">
                <form asp-action="AddComment" asp-controller="Comments" asp-area="" method="post">
                    <div class="form-group">
                        <input type="text" hidden="hidden" value="@Model.Id" name="BookId" />
                        <input type="datetime" hidden="hidden" value="@DateTime.UtcNow" name="CommentedOn" />
                        <input hidden="hidden" type="text" value="@user.UserName" name="CommentAuthor" />
                    </div>
                    <div class="form-group">
                        <textarea class="form-control" placeholder="Enter your comment" rows="4" name="message" id="my-input" maxlength="100"></textarea>
                        <span id='remainingC'></span>
                        @if (this.TempData.ContainsKey(GlobalConstants.Error))
                        {
                            <span>@TempData[GlobalConstants.Error]</span>
                        }
                    </div>
                    <button type="submit" class="btn btn-primary btn-sm"><i class="fas fa-plus-square">Comment</i></button>
                </form>
            </div>
        </div>
    </div>
</div>

@section scripts{

    @{ await Html.RenderPartialAsync("_MyScriptsPartial"); }
    <script>
        $(document).ready(function () {
            var len = 0;
            var maxchar = 100;

            $('#my-input').keyup(function () {
                len = this.value.length;
                if (len > maxchar) {
                    return false;
                } else if (len > 0) {
                    $("#remainingC").html("Remaining characters: " + (maxchar - len));
                } else {
                    $("#remainingC").html("Remaining characters: " + (maxchar));
                }
            })
        });
    </script>

}
